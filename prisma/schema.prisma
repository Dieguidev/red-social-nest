// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  surname  String
  nick     String @unique
  email    String @unique
  password String
  role     String @default("role_user")
  image    String @default("default.png")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relaciones para seguimiento
  followers Follow[] @relation("UserFollowers") // Usuarios que me siguen
  following Follow[] @relation("UserFollowing") // Usuarios a los que sigo

  Publication Publication[]
}

model Publication {
  id     Int     @id @default(autoincrement())
  text   String
  file   String?
  status Boolean @default(true)

  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
}

model Follow {
  id Int @id @default(autoincrement())

  // Relación con el usuario que sigue (follower)
  follower   User @relation("UserFollowing", fields: [followerId], references: [id])
  followerId Int

  // Relación con el usuario que es seguido (followed)
  followed   User @relation("UserFollowers", fields: [followedId], references: [id])
  followedId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Índice único para evitar seguimientos duplicados
  @@unique([followerId, followedId])
}
